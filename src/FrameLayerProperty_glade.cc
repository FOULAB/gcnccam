// generated 2008/4/27 18:29:16 CEST by abegeman@sonyx.(none)
// using glademm V2.6.0
//
// DO NOT EDIT THIS FILE ! It was created using
// glade-- /home/abegeman/sf_project/gcnccam/trunk/gcnccam.glade
// for gtk 2.8.20 and gtkmm 2.8.8
//
// Please modify the corresponding derived classes in ./src/FrameLayerProperty.cc


#if defined __GNUC__ && __GNUC__ < 3
#error This program will crash if compiled with g++ 2.x
// see the dynamic_cast bug in the gtkmm FAQ
#endif //
#include "config.h"
/*
 * Standard gettext macros.
 */
#ifdef ENABLE_NLS
#  include <libintl.h>
#  undef _
#  define _(String) dgettext (GETTEXT_PACKAGE, String)
#  ifdef gettext_noop
#    define N_(String) gettext_noop (String)
#  else
#    define N_(String) (String)
#  endif
#else
#  define textdomain(String) (String)
#  define gettext(String) (String)
#  define dgettext(Domain,Message) (Message)
#  define dcgettext(Domain,Message,Type) (Message)
#  define bindtextdomain(Domain,Directory) (Domain)
#  define _(String) (String)
#  define N_(String) (String)
#endif
#include <gtkmmconfig.h>
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
#define GMM_GTKMM_22_24(a,b) b
#else //gtkmm 2.2
#define GMM_GTKMM_22_24(a,b) a
#endif //
#include <sigc++/functors/mem_fun.h>
#include "FrameLayerProperty_glade.hh"

FrameLayerProperty_glade::FrameLayerProperty_glade(GlademmData *gmm_data
)
{  FrameLayerProperty = this;
   WidgetQQhzCHQ = Gtk::manage(new class Gtk::Label(_("Layer Name: ")));
   entry_property_name = Gtk::manage(new class Gtk::Entry());
   hbox5 = Gtk::manage(new class Gtk::HBox(false, 0));
   label16 = Gtk::manage(new class Gtk::Label(_("Comment:")));
   entry_comment = Gtk::manage(new class Gtk::Entry());
   hbox6 = Gtk::manage(new class Gtk::HBox(false, 0));
   label22 = Gtk::manage(new class Gtk::Label(_("Color:")));
   hbox_color = Gtk::manage(new class Gtk::HBox(false, 0));
   label28 = Gtk::manage(new class Gtk::Label(_("Priority:")));
   entry_priority = Gtk::manage(new class Gtk::Entry());
   hbox20 = Gtk::manage(new class Gtk::HBox(false, 0));
   label17 = Gtk::manage(new class Gtk::Label(_("Cut Direction: ")));
   combo_direction = Gtk::manage(new class Gtk::ComboBox());
   hbox7 = Gtk::manage(new class Gtk::HBox(false, 0));
   label18 = Gtk::manage(new class Gtk::Label(_("Cut Position: ")));
   combo_position = Gtk::manage(new class Gtk::ComboBox());
   hbox8 = Gtk::manage(new class Gtk::HBox(false, 0));
   label20 = Gtk::manage(new class Gtk::Label(_("Cut Feed Rate:")));
   entry_cut_feed_rate = Gtk::manage(new class Gtk::Entry());
   label_cut_feed_rate_unit = Gtk::manage(new class Gtk::Label(_("unit")));
   hbox10 = Gtk::manage(new class Gtk::HBox(false, 0));
   label21 = Gtk::manage(new class Gtk::Label(_("Z StartPosition:")));
   entry_z_start_position = Gtk::manage(new class Gtk::Entry());
   label_z_start_position_unit = Gtk::manage(new class Gtk::Label(_("unit")));
   hbox11 = Gtk::manage(new class Gtk::HBox(false, 0));
   label59 = Gtk::manage(new class Gtk::Label(_("Cut Depth:")));
   entry_cut_depth = Gtk::manage(new class Gtk::Entry());
   label_cut_depth_unit = Gtk::manage(new class Gtk::Label(_("unit")));
   hbox35 = Gtk::manage(new class Gtk::HBox(false, 0));
   label23 = Gtk::manage(new class Gtk::Label(_("Z Pitch/Cycle:")));
   entry_zpitch = Gtk::manage(new class Gtk::Entry());
   label_zpitch_unit = Gtk::manage(new class Gtk::Label(_("unit")));
   hbox13 = Gtk::manage(new class Gtk::HBox(false, 0));
   label30 = Gtk::manage(new class Gtk::Label(_("Z Feed Rate")));
   entry_z_feed_rate = Gtk::manage(new class Gtk::Entry());
   label_z_feed_rate_unit = Gtk::manage(new class Gtk::Label(_("unit")));
   hbox21 = Gtk::manage(new class Gtk::HBox(false, 0));
   label31 = Gtk::manage(new class Gtk::Label(_("Drill Smaller")));
   check_drill_smaller = Gtk::manage(new class Gtk::CheckButton(_("")));
   hbox22 = Gtk::manage(new class Gtk::HBox(false, 0));
   label24 = Gtk::manage(new class Gtk::Label(_("Tool:")));
   combo_tool = Gtk::manage(new class Gtk::ComboBox());
   hbox14 = Gtk::manage(new class Gtk::HBox(false, 0));
   label25 = Gtk::manage(new class Gtk::Label(_("Spindle Speed:")));
   entry_spindlespeed = Gtk::manage(new class Gtk::Entry());
   label_spindlespeed_unit = Gtk::manage(new class Gtk::Label(_("1/min")));
   hbox15 = Gtk::manage(new class Gtk::HBox(false, 0));
   label26 = Gtk::manage(new class Gtk::Label(_("Mist Cooling:")));
   check_cooling_mist = Gtk::manage(new class Gtk::CheckButton(_("")));
   hbox16 = Gtk::manage(new class Gtk::HBox(false, 0));
   label32 = Gtk::manage(new class Gtk::Label(_("Flood Cooling:")));
   check_cooling_flood = Gtk::manage(new class Gtk::CheckButton(_("")));
   hbox23 = Gtk::manage(new class Gtk::HBox(false, 0));
   vbox4 = Gtk::manage(new class Gtk::VBox(false, 4));
   button_ok = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-ok")));
   button_cancel = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-cancel")));
   vbox6 = Gtk::manage(new class Gtk::VBox(false, 0));
   hbox18 = Gtk::manage(new class Gtk::HBox(false, 0));
   WidgetQQhzCHQ->set_size_request(100,-1);
   WidgetQQhzCHQ->set_alignment(0.5,0.5);
   WidgetQQhzCHQ->set_padding(0,0);
   WidgetQQhzCHQ->set_justify(Gtk::JUSTIFY_LEFT);
   WidgetQQhzCHQ->set_line_wrap(true);
   WidgetQQhzCHQ->set_use_markup(false);
   WidgetQQhzCHQ->set_selectable(false);
   entry_property_name->set_flags(Gtk::CAN_FOCUS);
   entry_property_name->set_visibility(true);
   entry_property_name->set_editable(true);
   entry_property_name->set_max_length(0);
   entry_property_name->set_text(_(""));
   entry_property_name->set_has_frame(true);
   entry_property_name->set_activates_default(false);
   hbox5->pack_start(*WidgetQQhzCHQ, Gtk::PACK_SHRINK, 0);
   hbox5->pack_start(*entry_property_name, Gtk::PACK_SHRINK, 0);
   label16->set_size_request(100,-1);
   label16->set_alignment(0.5,0.5);
   label16->set_padding(0,0);
   label16->set_justify(Gtk::JUSTIFY_LEFT);
   label16->set_line_wrap(true);
   label16->set_use_markup(false);
   label16->set_selectable(false);
   entry_comment->set_flags(Gtk::CAN_FOCUS);
   entry_comment->set_visibility(true);
   entry_comment->set_editable(true);
   entry_comment->set_max_length(255);
   entry_comment->set_text(_(""));
   entry_comment->set_has_frame(true);
   entry_comment->set_activates_default(false);
   hbox6->pack_start(*label16, Gtk::PACK_SHRINK, 0);
   hbox6->pack_start(*entry_comment);
   label22->set_size_request(100,-1);
   label22->set_alignment(0.5,0.5);
   label22->set_padding(0,0);
   label22->set_justify(Gtk::JUSTIFY_LEFT);
   label22->set_line_wrap(true);
   label22->set_use_markup(false);
   label22->set_selectable(false);
   hbox_color->pack_start(*label22, Gtk::PACK_SHRINK, 0);
   label28->set_size_request(100,-1);
   label28->set_alignment(0.5,0.5);
   label28->set_padding(0,0);
   label28->set_justify(Gtk::JUSTIFY_LEFT);
   label28->set_line_wrap(true);
   label28->set_use_markup(false);
   label28->set_selectable(false);
   entry_priority->set_flags(Gtk::CAN_FOCUS);
   entry_priority->set_visibility(true);
   entry_priority->set_editable(true);
   entry_priority->set_max_length(0);
   entry_priority->set_text(_(""));
   entry_priority->set_has_frame(true);
   entry_priority->set_activates_default(false);
   hbox20->pack_start(*label28, Gtk::PACK_SHRINK, 0);
   hbox20->pack_start(*entry_priority, Gtk::PACK_SHRINK, 0);
   label17->set_size_request(100,-1);
   label17->set_alignment(0.5,0.5);
   label17->set_padding(0,0);
   label17->set_justify(Gtk::JUSTIFY_LEFT);
   label17->set_line_wrap(true);
   label17->set_use_markup(false);
   label17->set_selectable(false);
   hbox7->pack_start(*label17, Gtk::PACK_SHRINK, 0);
   hbox7->pack_start(*combo_direction, Gtk::PACK_SHRINK, 0);
   label18->set_size_request(100,-1);
   label18->set_alignment(0.5,0.5);
   label18->set_padding(0,0);
   label18->set_justify(Gtk::JUSTIFY_LEFT);
   label18->set_line_wrap(true);
   label18->set_use_markup(false);
   label18->set_selectable(false);
   hbox8->pack_start(*label18, Gtk::PACK_SHRINK, 0);
   hbox8->pack_start(*combo_position, Gtk::PACK_SHRINK, 0);
   label20->set_size_request(100,-1);
   label20->set_alignment(0.5,0.5);
   label20->set_padding(0,0);
   label20->set_justify(Gtk::JUSTIFY_LEFT);
   label20->set_line_wrap(true);
   label20->set_use_markup(false);
   label20->set_selectable(false);
   entry_cut_feed_rate->set_flags(Gtk::CAN_FOCUS);
   entry_cut_feed_rate->set_visibility(true);
   entry_cut_feed_rate->set_editable(true);
   entry_cut_feed_rate->set_max_length(0);
   entry_cut_feed_rate->set_text(_(""));
   entry_cut_feed_rate->set_has_frame(true);
   entry_cut_feed_rate->set_activates_default(false);
   label_cut_feed_rate_unit->set_alignment(0.5,0.5);
   label_cut_feed_rate_unit->set_padding(0,0);
   label_cut_feed_rate_unit->set_justify(Gtk::JUSTIFY_LEFT);
   label_cut_feed_rate_unit->set_line_wrap(false);
   label_cut_feed_rate_unit->set_use_markup(false);
   label_cut_feed_rate_unit->set_selectable(false);
   hbox10->pack_start(*label20, Gtk::PACK_SHRINK, 0);
   hbox10->pack_start(*entry_cut_feed_rate, Gtk::PACK_SHRINK, 0);
   hbox10->pack_start(*label_cut_feed_rate_unit, Gtk::PACK_SHRINK, 2);
   label21->set_size_request(100,-1);
   label21->set_alignment(0.5,0.5);
   label21->set_padding(0,0);
   label21->set_justify(Gtk::JUSTIFY_LEFT);
   label21->set_line_wrap(true);
   label21->set_use_markup(false);
   label21->set_selectable(false);
   entry_z_start_position->set_flags(Gtk::CAN_FOCUS);
   entry_z_start_position->set_visibility(true);
   entry_z_start_position->set_editable(true);
   entry_z_start_position->set_max_length(0);
   entry_z_start_position->set_text(_(""));
   entry_z_start_position->set_has_frame(true);
   entry_z_start_position->set_activates_default(false);
   label_z_start_position_unit->set_alignment(0.5,0.5);
   label_z_start_position_unit->set_padding(0,0);
   label_z_start_position_unit->set_justify(Gtk::JUSTIFY_LEFT);
   label_z_start_position_unit->set_line_wrap(false);
   label_z_start_position_unit->set_use_markup(false);
   label_z_start_position_unit->set_selectable(false);
   hbox11->pack_start(*label21, Gtk::PACK_SHRINK, 0);
   hbox11->pack_start(*entry_z_start_position, Gtk::PACK_SHRINK, 0);
   hbox11->pack_start(*label_z_start_position_unit, Gtk::PACK_SHRINK, 2);
   label59->set_size_request(100,-1);
   label59->set_alignment(0.5,0.5);
   label59->set_padding(0,0);
   label59->set_justify(Gtk::JUSTIFY_LEFT);
   label59->set_line_wrap(true);
   label59->set_use_markup(false);
   label59->set_selectable(false);
   entry_cut_depth->set_flags(Gtk::CAN_FOCUS);
   entry_cut_depth->set_visibility(true);
   entry_cut_depth->set_editable(true);
   entry_cut_depth->set_max_length(0);
   entry_cut_depth->set_text(_(""));
   entry_cut_depth->set_has_frame(true);
   entry_cut_depth->set_activates_default(false);
   label_cut_depth_unit->set_alignment(0.5,0.5);
   label_cut_depth_unit->set_padding(0,0);
   label_cut_depth_unit->set_justify(Gtk::JUSTIFY_LEFT);
   label_cut_depth_unit->set_line_wrap(false);
   label_cut_depth_unit->set_use_markup(false);
   label_cut_depth_unit->set_selectable(false);
   hbox35->pack_start(*label59, Gtk::PACK_SHRINK, 0);
   hbox35->pack_start(*entry_cut_depth, Gtk::PACK_SHRINK, 0);
   hbox35->pack_start(*label_cut_depth_unit, Gtk::PACK_SHRINK, 2);
   label23->set_size_request(100,-1);
   label23->set_alignment(0.5,0.5);
   label23->set_padding(0,0);
   label23->set_justify(Gtk::JUSTIFY_LEFT);
   label23->set_line_wrap(true);
   label23->set_use_markup(false);
   label23->set_selectable(false);
   entry_zpitch->set_flags(Gtk::CAN_FOCUS);
   entry_zpitch->set_visibility(true);
   entry_zpitch->set_editable(true);
   entry_zpitch->set_max_length(0);
   entry_zpitch->set_text(_(""));
   entry_zpitch->set_has_frame(true);
   entry_zpitch->set_activates_default(false);
   label_zpitch_unit->set_alignment(0.5,0.5);
   label_zpitch_unit->set_padding(0,0);
   label_zpitch_unit->set_justify(Gtk::JUSTIFY_LEFT);
   label_zpitch_unit->set_line_wrap(false);
   label_zpitch_unit->set_use_markup(false);
   label_zpitch_unit->set_selectable(false);
   hbox13->pack_start(*label23, Gtk::PACK_SHRINK, 0);
   hbox13->pack_start(*entry_zpitch, Gtk::PACK_SHRINK, 0);
   hbox13->pack_start(*label_zpitch_unit, Gtk::PACK_SHRINK, 2);
   label30->set_size_request(100,-1);
   label30->set_alignment(0.5,0.5);
   label30->set_padding(0,0);
   label30->set_justify(Gtk::JUSTIFY_LEFT);
   label30->set_line_wrap(true);
   label30->set_use_markup(false);
   label30->set_selectable(false);
   entry_z_feed_rate->set_flags(Gtk::CAN_FOCUS);
   entry_z_feed_rate->set_visibility(true);
   entry_z_feed_rate->set_editable(true);
   entry_z_feed_rate->set_max_length(0);
   entry_z_feed_rate->set_text(_(""));
   entry_z_feed_rate->set_has_frame(true);
   entry_z_feed_rate->set_activates_default(false);
   label_z_feed_rate_unit->set_alignment(0.5,0.5);
   label_z_feed_rate_unit->set_padding(0,0);
   label_z_feed_rate_unit->set_justify(Gtk::JUSTIFY_LEFT);
   label_z_feed_rate_unit->set_line_wrap(false);
   label_z_feed_rate_unit->set_use_markup(false);
   label_z_feed_rate_unit->set_selectable(false);
   hbox21->pack_start(*label30, Gtk::PACK_SHRINK, 0);
   hbox21->pack_start(*entry_z_feed_rate, Gtk::PACK_SHRINK, 0);
   hbox21->pack_start(*label_z_feed_rate_unit, Gtk::PACK_SHRINK, 2);
   label31->set_size_request(100,-1);
   label31->set_alignment(0.5,0.5);
   label31->set_padding(0,0);
   label31->set_justify(Gtk::JUSTIFY_LEFT);
   label31->set_line_wrap(true);
   label31->set_use_markup(false);
   label31->set_selectable(false);
   check_drill_smaller->set_flags(Gtk::CAN_FOCUS);
   _tooltips.set_tip(*check_drill_smaller, _("Force to Drille Smaller Holes"), "");
   check_drill_smaller->set_relief(Gtk::RELIEF_NORMAL);
   check_drill_smaller->set_mode(true);
   check_drill_smaller->set_active(false);
   hbox22->pack_start(*label31, Gtk::PACK_SHRINK, 0);
   hbox22->pack_start(*check_drill_smaller, Gtk::PACK_SHRINK, 0);
   label24->set_size_request(100,-1);
   label24->set_alignment(0.5,0.5);
   label24->set_padding(0,0);
   label24->set_justify(Gtk::JUSTIFY_LEFT);
   label24->set_line_wrap(true);
   label24->set_use_markup(false);
   label24->set_selectable(false);
   hbox14->pack_start(*label24, Gtk::PACK_SHRINK, 0);
   hbox14->pack_start(*combo_tool, Gtk::PACK_SHRINK, 0);
   label25->set_size_request(100,-1);
   label25->set_alignment(0.5,0.5);
   label25->set_padding(0,0);
   label25->set_justify(Gtk::JUSTIFY_LEFT);
   label25->set_line_wrap(true);
   label25->set_use_markup(false);
   label25->set_selectable(false);
   entry_spindlespeed->set_flags(Gtk::CAN_FOCUS);
   entry_spindlespeed->set_visibility(true);
   entry_spindlespeed->set_editable(true);
   entry_spindlespeed->set_max_length(0);
   entry_spindlespeed->set_text(_(""));
   entry_spindlespeed->set_has_frame(true);
   entry_spindlespeed->set_activates_default(false);
   label_spindlespeed_unit->set_alignment(0.5,0.5);
   label_spindlespeed_unit->set_padding(0,0);
   label_spindlespeed_unit->set_justify(Gtk::JUSTIFY_LEFT);
   label_spindlespeed_unit->set_line_wrap(false);
   label_spindlespeed_unit->set_use_markup(false);
   label_spindlespeed_unit->set_selectable(false);
   hbox15->pack_start(*label25, Gtk::PACK_SHRINK, 0);
   hbox15->pack_start(*entry_spindlespeed, Gtk::PACK_SHRINK, 0);
   hbox15->pack_start(*label_spindlespeed_unit, Gtk::PACK_SHRINK, 2);
   label26->set_size_request(100,-1);
   label26->set_alignment(0.5,0.5);
   label26->set_padding(0,0);
   label26->set_justify(Gtk::JUSTIFY_LEFT);
   label26->set_line_wrap(true);
   label26->set_use_markup(false);
   label26->set_selectable(false);
   check_cooling_mist->set_flags(Gtk::CAN_FOCUS);
   _tooltips.set_tip(*check_cooling_mist, _("Switch Cooling Air On/Off"), "");
   check_cooling_mist->set_relief(Gtk::RELIEF_NORMAL);
   check_cooling_mist->set_mode(true);
   check_cooling_mist->set_active(false);
   hbox16->pack_start(*label26, Gtk::PACK_SHRINK, 0);
   hbox16->pack_start(*check_cooling_mist, Gtk::PACK_SHRINK, 0);
   label32->set_size_request(100,-1);
   label32->set_alignment(0.5,0.5);
   label32->set_padding(0,0);
   label32->set_justify(Gtk::JUSTIFY_LEFT);
   label32->set_line_wrap(true);
   label32->set_use_markup(false);
   label32->set_selectable(false);
   check_cooling_flood->set_sensitive(false);
   check_cooling_flood->set_flags(Gtk::CAN_FOCUS);
   _tooltips.set_tip(*check_cooling_flood, _("Switch Flood Cooling On/Of"), "");
   check_cooling_flood->set_relief(Gtk::RELIEF_NORMAL);
   check_cooling_flood->set_mode(true);
   check_cooling_flood->set_active(false);
   hbox23->pack_start(*label32, Gtk::PACK_SHRINK, 0);
   hbox23->pack_start(*check_cooling_flood, Gtk::PACK_SHRINK, 0);
   vbox4->pack_start(*hbox5, Gtk::PACK_SHRINK, 5);
   vbox4->pack_start(*hbox6, Gtk::PACK_SHRINK, 5);
   vbox4->pack_start(*hbox_color, Gtk::PACK_SHRINK, 0);
   vbox4->pack_start(*hbox20, Gtk::PACK_SHRINK, 0);
   vbox4->pack_start(*hbox7, Gtk::PACK_SHRINK, 5);
   vbox4->pack_start(*hbox8, Gtk::PACK_SHRINK, 5);
   vbox4->pack_start(*hbox10, Gtk::PACK_SHRINK, 0);
   vbox4->pack_start(*hbox11, Gtk::PACK_SHRINK, 0);
   vbox4->pack_start(*hbox35, Gtk::PACK_SHRINK, 0);
   vbox4->pack_start(*hbox13, Gtk::PACK_SHRINK, 0);
   vbox4->pack_start(*hbox21, Gtk::PACK_SHRINK, 0);
   vbox4->pack_start(*hbox22, Gtk::PACK_SHRINK, 0);
   vbox4->pack_start(*hbox14, Gtk::PACK_SHRINK, 0);
   vbox4->pack_start(*hbox15, Gtk::PACK_SHRINK, 0);
   vbox4->pack_start(*hbox16, Gtk::PACK_SHRINK, 0);
   vbox4->pack_start(*hbox23, Gtk::PACK_SHRINK, 0);
   button_ok->set_flags(Gtk::CAN_FOCUS);
   button_ok->set_border_width(2);
   button_ok->set_relief(Gtk::RELIEF_NORMAL);
   button_cancel->set_flags(Gtk::CAN_FOCUS);
   button_cancel->set_border_width(2);
   button_cancel->set_relief(Gtk::RELIEF_NORMAL);
   vbox6->set_border_width(10);
   vbox6->pack_start(*button_ok, Gtk::PACK_SHRINK, 0);
   vbox6->pack_start(*button_cancel, Gtk::PACK_SHRINK, 0);
   hbox18->pack_start(*vbox4);
   hbox18->pack_start(*vbox6, Gtk::PACK_SHRINK, 0);
   FrameLayerProperty->set_shadow_type(Gtk::SHADOW_NONE);
   FrameLayerProperty->set_label_align(0,0.5);
   FrameLayerProperty->add(*hbox18);
   WidgetQQhzCHQ->show();
   entry_property_name->show();
   hbox5->show();
   label16->show();
   entry_comment->show();
   hbox6->show();
   label22->show();
   hbox_color->show();
   label28->show();
   entry_priority->show();
   hbox20->show();
   label17->show();
   combo_direction->show();
   hbox7->show();
   label18->show();
   combo_position->show();
   hbox8->show();
   label20->show();
   entry_cut_feed_rate->show();
   label_cut_feed_rate_unit->show();
   hbox10->show();
   label21->show();
   entry_z_start_position->show();
   label_z_start_position_unit->show();
   hbox11->show();
   label59->show();
   entry_cut_depth->show();
   label_cut_depth_unit->show();
   hbox35->show();
   label23->show();
   entry_zpitch->show();
   label_zpitch_unit->show();
   hbox13->show();
   label30->show();
   entry_z_feed_rate->show();
   label_z_feed_rate_unit->show();
   hbox21->show();
   label31->show();
   check_drill_smaller->show();
   hbox22->show();
   label24->show();
   combo_tool->show();
   hbox14->show();
   label25->show();
   entry_spindlespeed->show();
   label_spindlespeed_unit->show();
   hbox15->show();
   label26->show();
   check_cooling_mist->show();
   hbox16->show();
   label32->show();
   check_cooling_flood->show();
   hbox23->show();
   vbox4->show();
   button_ok->show();
   button_cancel->show();
   vbox6->show();
   hbox18->show();
   FrameLayerProperty->show();
   check_cooling_mist->signal_toggled().connect(sigc::mem_fun(*this, &FrameLayerProperty_glade::on_check_cooling_mist_toggled), false);
   button_ok->signal_clicked().connect(sigc::mem_fun(*this, &FrameLayerProperty_glade::on_button_ok_clicked), false);
   button_cancel->signal_clicked().connect(sigc::mem_fun(*this, &FrameLayerProperty_glade::on_button_cancel_clicked), false);
}

FrameLayerProperty_glade::~FrameLayerProperty_glade()
{  
}
